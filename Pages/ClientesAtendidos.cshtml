@page
@model ProyectoWebFormularios.Pages.ClientesAtendidosModel
@{
    ViewData["Title"] = "Clientes Atendidos";
}

<h1>@ViewData["Title"]</h1>

<div class="card p-3">
    <div class="row mb-3">
        <div class="col-md-4">
            <label for="fecha-inicio" class="form-label fw-bold">Fecha Inicio</label>
            <input type="date" id="fecha-inicio" class="form-control" />
        </div>
        <div class="col-md-4">
            <label for="fecha-fin" class="form-label fw-bold">Fecha Fin</label>
            <input type="date" id="fecha-fin" class="form-control" />
        </div>
        <div class="col-md-4 d-flex align-items-end">
            <button id="btn-filtrar" class="btn btn-primary w-100 mt-2 mt-md-0">Filtrar</button>
        </div>
    </div>
</div>

<div class="table-responsive mt-4">
    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark">
            <tr>
                <th>Nombre</th>
                <th>Apellidos</th>
                <th>Teléfono Celular</th>
                <th>Email</th>
                <th>Sexo</th>
                <th>Motivo</th>
                <th>Fecha Registro</th>
            </tr>
        </thead>
        <tbody id="clientes-tabla-body">
            <!-- Los datos se insertarán aquí mediante JavaScript -->
        </tbody>
    </table>
</div>

@section Scripts {
<script src="~/js/clientes-data.js" asp-append-version="true"></script>

<script>
    $(document).ready(function () {
        const tablaBody = $('#clientes-tabla-body');

        function renderTabla(datos) {
            tablaBody.empty();
            datos.forEach(cliente => {
                const fila = `<tr>
                    <td>${cliente.Nombre}</td>
                    <td>${cliente.Apellidos}</td>
                    <td>${cliente.TelefonoCelular}</td>
                    <td>${cliente.Email}</td>
                    <td>${cliente.Sexo}</td>
                    <td>${cliente.Motivo}</td>
                    <td>${new Date(cliente.FechaRegistro).toLocaleDateString()}</td>
                </tr>`;
                tablaBody.append(fila);
            });
        }

        // Función para ordenar la tabla
        function sortTable(columnIndex) {
            const table = document.querySelector('.table');
            const tbody = table.querySelector('tbody');
            const rows = Array.from(tbody.querySelectorAll('tr'));

            const collator = new Intl.Collator(['es', 'en'], { numeric: true });

            const sortedRows = rows.sort((rowA, rowB) => {
                const cellA = rowA.querySelectorAll('td')[columnIndex].textContent.trim();
                const cellB = rowB.querySelectorAll('td')[columnIndex].textContent.trim();

                return collator.compare(cellA, cellB);
            });

            tbody.innerHTML = '';
            sortedRows.forEach(row => tbody.appendChild(row));
        }

        // Agrega eventos de clic a los encabezados de la tabla para ordenar
        const tableHeaders = document.querySelectorAll('.table th');
        tableHeaders.forEach((header, index) => {
            header.addEventListener('click', () => sortTable(index));
        });

        // Carga inicial de todos los datos
        // Refresca la página cada 30 segundos (30000 milisegundos)
        setInterval(function () {
            location.reload();
        }, 30000);

        renderTabla(clientesAtendidosData);

        $('#btn-filtrar').on('click', function () {
            const fechaInicio = $('#fecha-inicio').val();
            const fechaFin = $('#fecha-fin').val();
        
            const datosFiltrados = clientesAtendidosData.filter(cliente => {
                // Parse dates, handling potential null/empty values
                const fechaRegistro = new Date(cliente.FechaRegistro);
                const inicio = fechaInicio ? new Date(fechaInicio) : null;
                const fin = fechaFin ? new Date(fechaFin) : null;
        
                // Si hay rango, se filtra. Si un campo está vacío, no se considera para el filtro.
                const cumpleInicio = inicio ? fechaRegistro >= inicio : true;
                const cumpleFin = fin ? fechaRegistro <= fin : true;
        
                return cumpleInicio && cumpleFin;
        

            });

            renderTabla(datosFiltrados);
        });
    });
</script>
}
